# Generated by Django 3.0.6 on 2020-05-05 19:15

from django.db import migrations, models
import django.db.models.deletion
import realestate.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория бизнеса',
                'verbose_name_plural': 'Категории бизнесов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassNewBuilding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Класс Жилья')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Класс Новостройки',
                'verbose_name_plural': 'Классы Новостроек',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Отображать, Да/Нет')),
                ('is_sale', models.BooleanField(default=False, verbose_name='Продажа')),
                ('is_rent', models.BooleanField(default=False, verbose_name='Аренда')),
                ('area', models.FloatField(blank=True, db_index=True, null=True, verbose_name='Площадь')),
                ('floor', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Этаж')),
                ('address', models.CharField(db_index=True, default=None, max_length=150, verbose_name='Адрес')),
                ('building_commercial_premise', models.BooleanField(default=False, verbose_name='Строящее помещение, Да/Нет')),
                ('finished_commercial_premise', models.BooleanField(default=False, verbose_name='Готовое  помещение, Да/Нет')),
                ('rent_price', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Стоимость аренды, руб/мес.')),
                ('cost_of_sale', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Стоймость на продажу')),
                ('min_payback', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Окупаемость, от (лет)')),
                ('max_payback', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Окупаемость, до (лет)')),
                ('min_average_rental_rate', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Средняя арендная ставка, от')),
                ('max_average_rental_rate', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Средняя арендная ставка, до')),
                ('possible_income', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Возможный доход')),
                ('min_kw', models.FloatField(blank=True, db_index=True, null=True, verbose_name='кВт, от')),
                ('max_kw', models.FloatField(blank=True, db_index=True, null=True, verbose_name='кВт, до')),
                ('main_image', models.FileField(blank=True, null=True, upload_to=realestate.models.generate_url_for_image, verbose_name='Главное изображение помещения')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('business_category', models.ManyToManyField(blank=True, default=None, related_name='businesscategory', to='realestate.BusinessCategory', verbose_name='Категория бизнеса')),
            ],
            options={
                'verbose_name': 'Коммерческое помещение',
                'verbose_name_plural': 'Коммерческие помещения',
            },
        ),
        migrations.CreateModel(
            name='CommunicationSystems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Системы коммуникаций',
                'verbose_name_plural': 'Системы коммуникаций',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CookerHood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Вытяжка',
                'verbose_name_plural': 'Вытяжки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeadlineNewBuilding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_date', models.CharField(max_length=10, unique=True, verbose_name='Срок сдачи')),
                ('only_year', models.IntegerField(db_index=True, verbose_name='Год срока сдачи')),
                ('only_quarter', models.IntegerField(db_index=True, verbose_name='Квартал срока сдачи')),
            ],
            options={
                'verbose_name': 'Срок сдачи',
                'verbose_name_plural': 'Сроки сдачи',
            },
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Застройщик')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Застройщик',
                'verbose_name_plural': 'Застройщики',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Район')),
                ('subname', models.CharField(blank=True, max_length=10, unique=True, verbose_name='Сокращённое название')),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FloorInBuilding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_floor', models.IntegerField(db_index=True, verbose_name='Этаж')),
            ],
            options={
                'verbose_name': 'Этаж в здании',
                'verbose_name_plural': 'Этажи в здании',
                'ordering': ['num_floor'],
            },
        ),
        migrations.CreateModel(
            name='PurposeOfCommercialPremise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Назначение помещения',
                'verbose_name_plural': 'Назначении помещений',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RelativeLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Относительное расположение',
                'verbose_name_plural': 'Относительные расположения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeEntranceToCommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип входа в коммерческое помещение',
                'verbose_name_plural': 'Типы входов в коммерческое помещение',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ResidentialComplex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Отображать, Да/Нет')),
                ('name', models.CharField(db_index=True, max_length=150, unique=True, verbose_name='Название ЖК')),
                ('address', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True, verbose_name='Адрес')),
                ('one_or_many_buildings', models.BooleanField(default=True, verbose_name='Одно/несколько строений')),
                ('number_of_storeys', models.CharField(blank=True, max_length=10, null=True, verbose_name='Этажность')),
                ('house_completed', models.BooleanField(default=False, verbose_name='Дом сдан, Да/Нет')),
                ('main_image', models.FileField(blank=True, null=True, upload_to=realestate.models.generate_url_for_image, verbose_name='Главное изображение ЖК')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('distance_to_metro', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Растояние до метро, м')),
                ('site_developer', models.URLField(blank=True, default=None, max_length=300, null=True, verbose_name='Сайт застройщика/Новостройки')),
                ('class_new_building', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classnewbuilding', to='realestate.ClassNewBuilding', verbose_name='Класс Новостройки')),
                ('deadline', models.ManyToManyField(blank=True, default=None, related_name='deadline', to='realestate.DeadlineNewBuilding', verbose_name='Срок сдачи')),
                ('developer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='developer', to='realestate.Developer', verbose_name='Застройщик')),
                ('district', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='districtresidentialcomplex', to='realestate.District', verbose_name='Район')),
            ],
            options={
                'verbose_name': 'Жилой Комплекс',
                'verbose_name_plural': 'Жилые Комплексы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ImagesResidentialComplex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_attr', models.TextField(verbose_name='Описание, alt')),
                ('image', models.FileField(blank=True, null=True, upload_to=realestate.models.generate_url_for_image, verbose_name='Изображение')),
                ('residential_complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate.ResidentialComplex', verbose_name='Жилой Комплекс')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='ImagesCommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_attr', models.TextField(verbose_name='Описание, alt')),
                ('image', models.FileField(blank=True, null=True, upload_to=realestate.models.generate_url_for_image, verbose_name='Изображение')),
                ('commercial_premises', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate.CommercialPremises', verbose_name='Коммерческое помещение')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='FloorPlansCommercialPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_attr', models.TextField(verbose_name='Описание, alt')),
                ('image', models.FileField(blank=True, null=True, upload_to=realestate.models.generate_url_for_image, verbose_name='Планировка Коммерческого помещения')),
                ('commercial_premises', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realestate.CommercialPremises', verbose_name='Коммерческое помещение')),
            ],
            options={
                'verbose_name': 'Планировка',
                'verbose_name_plural': 'Планировки',
            },
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='communication_systems',
            field=models.ManyToManyField(blank=True, default=None, related_name='communicationsystems', to='realestate.CommunicationSystems', verbose_name='Системы коммуникаций'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='cooker_hood',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cookerhood', to='realestate.CookerHood', verbose_name='Вытяжка'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='district',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='districtcommercialpremises', to='realestate.District', verbose_name='Район'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='purpose_commercial_premise',
            field=models.ManyToManyField(blank=True, default=None, related_name='purposecommercialpremise', to='realestate.PurposeOfCommercialPremise', verbose_name='Назначение коммерческого помещения'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='relative_location',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relativelocation', to='realestate.RelativeLocation', verbose_name='Относительное расположение'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='residential_complex',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='residentialcomplex', to='realestate.ResidentialComplex', verbose_name='Жилой комплекс'),
        ),
        migrations.AddField(
            model_name='commercialpremises',
            name='type_entrance',
            field=models.ManyToManyField(blank=True, default=None, related_name='typeentrance', to='realestate.TypeEntranceToCommercialPremises', verbose_name='Тип входа'),
        ),
    ]
